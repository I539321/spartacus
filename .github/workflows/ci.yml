on:
  push:
    branches:
      - develop
      - epic/**
      - release/**
      - integration-libs/**
  pull_request:
    types: [opened, synchronize, reopened]

env: 
  TESTS_CONCLUSION: success

name: Spartacus CI pipeline
jobs:
  b2c_e2e_test_1:
    name: B2C Cypress e2e tests 1
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./
    steps:
      - uses: actions/checkout@v2
      - name: Run e2es
        env:
          CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
          SPA_ENV: ci,b2c
        run: |
          echo ${{ env.TEST_CONCLUSION }}
          ls -al     
          echo $GITHUB_WORKSPACE
          pwd    
          ci-scripts/e2e-cypress.sh
      - name: Update tests conclusion status on failure
        if: ${{ failure() }} 
        run: echo "TESTS_CONCLUSION=failure" >> $GITHUB_ENV
        
  # b2c_e2e_test_2:
  #   name: B2C Cypress e2e tests 2
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run: 
  #       working-directory: ./
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run e2es
  #       env:
  #         CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  #         SPA_ENV: ci,b2c
  #       run: |
  #         ls -al     
  #         echo $GITHUB_WORKSPACE
  #         pwd    
  #         ci-scripts/e2e-cypress.sh
  # b2c_e2e_test_3:
  #   name: B2C Cypress e2e tests 3
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run: 
  #       working-directory: ./
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run e2es
  #       env:
  #         CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  #         SPA_ENV: ci,b2c
  #       run: |
  #         ls -al     
  #         echo $GITHUB_WORKSPACE
  #         pwd    
  #         ci-scripts/e2e-cypress.sh
  # b2c_e2e_test_4:
  #   name: B2C Cypress e2e tests 4
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run: 
  #       working-directory: ./
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run e2es
  #       env:
  #         CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  #         SPA_ENV: ci,b2c
  #       run: |
  #         ls -al     
  #         echo $GITHUB_WORKSPACE
  #         pwd    
  #         ci-scripts/e2e-cypress.sh
  # b2c_e2e_test_5:
  #   name: B2C Cypress e2e tests 5
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run: 
  #       working-directory: ./
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run e2es
  #       env:
  #         CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  #         SPA_ENV: ci,b2c
  #       run: |
  #         ls -al     
  #         echo $GITHUB_WORKSPACE
  #         pwd    
  #         ci-scripts/e2e-cypress.sh
  b2b_e2e_test_1:
    name: B2B Cypress e2e tests 1
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./
    steps:
      - uses: actions/checkout@v2
      - name: Run e2es
        env:
          CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
          SPA_ENV: ci,b2b
        run: |
          echo ${{ env.TEST_CONCLUSION }}
          ls -al         
          ci-scripts/e2e-cypress.sh -s b2b
      - uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('test fail')
      - name: Update tests conclusion status on failure
        if: ${{ failure() }} 
        run: | 
          echo "TESTS_CONCLUSION=failure" >> $GITHUB_ENV
          echo ${{ env.TEST_CONCLUSION }}

  # b2b_e2e_test_2:
  #   name: B2B Cypress e2e tests 2
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run: 
  #       working-directory: ./
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run e2es
  #       env:
  #         CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  #         SPA_ENV: ci,b2b
  #       run: |
  #         ls -al         
  #         ci-scripts/e2e-cypress.sh -s b2b
  ci_conclusion:
    needs: [b2c_e2e_test_1, b2b_e2e_test_1]
    name: CI Conclusion
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Required CI failed
      - uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('test fail')
        if: |
          needs.b2c_e2e_test_1.status == 'failure' || 
          needs.b2c_e2e_test_1.status == 'failure'